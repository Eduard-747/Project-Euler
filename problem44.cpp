// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
// Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
// Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

#include <iostream>
#include <cmath>

unsigned long pentagonal(const int& n)
{
    return n * (3 * n - 1) / 2;
}

bool isPentagonal(const unsigned long int &n) 
{
    return (std::sqrt(24 * n + 1) + 1) / 6 == (unsigned long)((std::sqrt(24 * n + 1) + 1) / 6);
}

int main() 
{
    for (int i = 1; i < 3000; ++i) {
        for (int j = i + 1; j < 3000; ++j) {
            if (isPentagonal(pentagonal(j) - pentagonal(i)) && isPentagonal(pentagonal(j) + pentagonal(i))) {
                std::cout << pentagonal(j) - pentagonal(i) << std::endl;
                return 0;
            }
        }
    }

    return 0;
}