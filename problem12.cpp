// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
// Let us list the factors of the first seven triangle numbers
//  1: 1
//  3: 1,3
//  6: 1,2,3,6
// 10: 1,2,5,10
// 15: 1,3,5,15
// 21: 1,3,7,21
// 28: 1,2,4,7,14,28
// We can see that 28 is the first triangle number to have over five divisors.
// What is the value of the first triangle number to have over n divisors?

#include <iostream>

int add_faktorial(const int& num)
{
    if(num == 0) return 0 ;
        return num + add_faktorial(num - 1) ;
}

int divisors_count(const long long& num)
{
    int count{1} ;
    for(int i = 1; i <= num / 2; ++i)
    {
        if(num % i == 0) {
            ++count ;
        }
    }
    return count ;
}

int main()
{
    int count ;
    std::cout << "Enter divisors count: " ;
    std::cin >> count ;
    for(int i = 0; ; ++i)
    {
        if(divisors_count(add_faktorial(i)) == count) 
        {
            std::cout << add_faktorial(i) << std::endl ;
            break ;
        }
    }
    return 0;
}