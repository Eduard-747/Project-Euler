// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
// Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
// Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
// Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
// It can be verified that T285 = P165 = H143 = 40755.
// Find the next triangle number that is also pentagonal and hexagonal.

#include <iostream>
#include <cmath>

unsigned long long triangular(const int& n) 
{
    return n * (n + 1) / 2;
}

unsigned long long hexagonal(const int& n) 
{
    return n * (2 * n - 1);
}

bool isPentagonal(const unsigned long long & n) 
{
    return (std::sqrt(24 * n + 1) + 1) / 6 == (unsigned long long)((std::sqrt(24 * n + 1) + 1) / 6);
}

int main() 
{
    int n = 144;
    while (true) {
        if (isPentagonal(hexagonal(n))) {
            std::cout << hexagonal(n) << std::endl;
            break;
        }
        ++n;
    }

    return 0;
}